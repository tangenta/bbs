input PostInfoInput {
    title: String!
    content: String!
}

input CommentInfoInput {
    postIdToComment: String!
    content: String!
}

input ReplyInfoInput {
    commentIdToReply: String!
    content: String!
}

type CommentItemInfo {
    commentId: String!
    postIdCommenting: String!
    content: String!
    authorId: PersonalInfo!
    allReplies: [ReplyItemInfo!]!
}

type ReplyItemInfo {
    content: String!
    replyTo: PersonalInfo!
    authorId: PersonalInfo!
}

type PostItemInfo {
    postId: String!
    title: String!
    content: String!
    authorId: PersonalInfo!
    latestCommenterId: PersonalInfo
    latestActiveTime: Long!
    createTime: Long!
    heat: Int!
    allComments(skip: Long, first: Long): AllCommentResult!
}

type AllCommentResult {
    totalCount: Long!
    commentIds: [CommentItemInfo!]!
}

type SchoolHeatError {
    error: String!
}

union CreatePostResult    = SchoolHeatError | PostItemInfo
union ModifyPostResult    = SchoolHeatError | PostItemInfo
union CreateReplyResult   = SchoolHeatError | ReplyItemInfo
union CreateCommentResult = SchoolHeatError | CommentItemInfo
union PostItemResult      = SchoolHeatError | PostItemInfo

type AllPostResult {
    totalCount: Long!
    postInfos: [PostItemInfo!]!
}

enum SortedBy {
    TimeAsc
    TimeDes
    HeatAsc
    HeatDes
}

