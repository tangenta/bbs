type Query {
    personInfo(id: ID!): PersonInfoResult!
    allMajors: [String!]!
    allSchools: [String!]!
    allCourses: [String!]!
    majorsIn(school: String!): [String!]!

    currentUser: CurrentUserResult!

    allFounds(skip: Long, first: Long): AllFoundsResult!
    foundInfo(id: ID!): FoundInfoResult!
#   searchFounds(object: String!): SearchFoundsResult!
}

type Mutation {
    editPersonInfo(personInfoInput: PersonInfoInput!): EditPersonInfoResult!
    signup(signup: SignupInput!): SignupResult!
    login(loginInput: LoginInput!): LoginResult!
    logout: LogoutResult!

    confirmPassword(comfirmInput: LoginInput!): ConfirmPasswordResult!
    changePassword(newPassword: String!, resetToken: String!): ChangePasswordResult!

    createFound(foundInput: FoundInput!): CreateFoundResult!
    deleteFound(foundId: ID!): DeleteFoundResult!
    claimFound(foundId: ID!): ClaimFoundResult!
}

schema {
    query: Query
    mutation: Mutation
}
