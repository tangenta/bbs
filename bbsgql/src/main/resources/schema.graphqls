type Query {
    test(testStr: String!): String!

    loggedId: GetIdResult!

    userInfo(userId: String!): PersonalInfoResult!
    allAcademies: [String!]!
    allMajors: [String!]!
    majorsIn(academy: String!): MajorsInResult!

    foundItemInfo(foundId: String!): ItemInfoResult!
    lostItemInfo(lostId: String!): ItemInfoResult!

}

type Mutation {
    test(testStr: String!): String!

    signUp(username: String!, password: String!, nickname: String!): SignUpResult!
    logIn(username: String!, password: String!): LogInResult!
    logOut: LogOutError

    confirmPassword(username: String!, password: String!): ConfirmPasswordResult!
    changePassword(resetToken: String!, newPassword: String!): ChangePasswordError

    uploadUserProfile(base64Image: String!): ModifyPersonInfoResult!
    changeGender(gender: String!): ModifyPersonInfoResult!
    changeGrade(grade: String!): ModifyPersonInfoResult!
    changeIntroduction(introduction: String!): ModifyPersonInfoResult!
    changeNickname(nickname: String!): ModifyPersonInfoResult!
    changeAcademy(academy: String!): ModifyPersonInfoResult!
    changeMajor(major: String!): ModifyPersonInfoResult!

    publishFound(itemInfo: ItemInfoInput!): PublishItemResult!
    publishLost(itemInfo: ItemInfoInput!): PublishItemResult!
    modifyLostItem(lostId: String!, itemInfo: ItemInfoInput!): ModifyItemResult!
    modifyFoundItem(foundId: String!, itemInfo: ItemInfoInput!): ModifyItemResult!
}

schema {
    query: Query
    mutation: Mutation
}
