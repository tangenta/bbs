scalar Long

type Query {
    personInfo(id: ID!): PersonInfoResult!
    allMajors: [String!]!
    allSchools: [String!]!
    allCourses: [String!]!
    majorsIn(school: String!): [String!]!

    currentUser: CurrentUserResult!

    allFounds(skip: Long, first: Long): AllFoundsResult!
    foundInfo(id: ID!): FoundInfoResult!
#   searchFounds(object: String!): SearchFoundsResult!
    allLosts(skip: Long, first: Long): AllLostsResult!
    lostInfo(id: ID!): LostInfoResult!
#    searchLosts(object: String!): SearchLostsResult!

    schoolHeatInfo(id: ID!): SchoolHeatInfoResult!
    allSchoolHeats(skip: Long, first: Long, sortedBy: SortedBy): AllSchoolHeatsResult!
    schoolHeatsOfAuthor(authorId: ID!, skip: Long, first: Long): SchoolHeatsOfAuthorResult!

    allLectures(skip: Long, first: Long): AllLecturesResult!
    lectureInfo(id: ID!): LectureInfoResult!
#    searchLectures(title: String!, skip: Long, first: Long): SearchLecturesResult!

    allLearningResources(skip: Long, first: Long, course: String, sortedBy: SortedBy): AllLearningResourceResult!
    allCourses: [String!]!
    learningResourceInfo(id: ID!): LearningResourceInfoResult!
    learningResourcesOfAuthor(authorId: ID!, skip: Long, first: Long): LearningResourcesOfAuthorResult!
#    searchLearningResources(title: String!): SearchLearningResourcesResult!

#    allEntertainments(skip: Long, first: Long, sortedBy: SortedBy): AllEntertainmentsResult!
#    entertainmentInfo(id: ID!): EntertainmentInfoResult!
#    entertainmentsOfAuthor(authorId: ID!, skip: Long, first: Long): EntertainmentsOfAuthorResult!
#    searchEntertainments(title: String!): SearchEntertainmentsResult!
}

type Mutation {
    reset: Boolean!

    editPersonInfo(personInfoInput: PersonInfoInput!): EditPersonInfoResult!
    signup(signup: SignupInput!): SignupResult!
    login(loginInput: LoginInput!): LoginResult!
    logout: LogoutResult!

    confirmPassword(comfirmInput: LoginInput!): ConfirmPasswordResult!
    changePassword(newPassword: String!, resetToken: String!): ChangePasswordResult!

    createFound(foundInput: FoundInput!): CreateFoundResult!
    deleteFound(foundId: ID!): DeleteFoundResult!
    claimFound(foundId: ID!): ClaimFoundResult!
    cancelClaimFound(foundId: ID!): CancelClaimFoundResult!
    createLost(lostInput: LostInput!): CreateLostResult!
    deleteLost(id: ID!): DeleteLostResult!
    claimLost(lostId: ID!): ClaimLostResult!
    cancelClaimLost(foundId: ID!): CancelClaimLostResult!

    createSchoolHeat(schoolHeatInput: SchoolHeatInput!): CreateSchoolHeatResult!
    deleteSchoolHeat(id: ID!): DeleteSchoolHeatResult!

    createLecture(lectureInput: LectureInput!): CreateLectureResult!
    editLecture(id: ID!, lectureInput: LectureOptionalInput!): EditLectureResult!
    deleteLecture(id: ID!): DeleteLectureResult!

    createLearningResource(learningResourceInput: LearningResourceInput): CreateLearningResourceResult!
    deleteLearningResource(id: ID!): DeleteLearningResourceResult!
    createLearningResourceComment(learningResourceCommentInput: LearningResourceCommentInput!): CreateLearningResourceCommentResult!
    deleteLearningResourceComment(lrId: ID!, cmmtId: ID!): DeleteLearningResourceCommentResult!
    createLearningResourceCommentReply(learningResourceReplyInput: LearningResourceReplyInput): CreateLearningResourceCommentReplyResult!
    deleteLearningResourceCommentReply(lrId: ID!, cmmtId: ID!, rpyId: ID!): DeleteLearningResourceCommentReplyResult!

    createEntertainment(entertainmentInput: EntertainmentInput!): CreateEntertainmentResult!
    deleteEntertainment(id: ID!): DeleteEntertainmentResult!
#    createEntertainmentComment(entertainmentCommentInput: EntertainmentCommentInput!): CreateEntertainmentCommentResult!
#    deleteEntertainmentComment(etmtId: ID!, cmmtId: ID!): DeleteEntertainmentCommentResult!
#    createEntertainmentCommentReply(entertainmentReplyInput: EntertainmentReplyInput): CreateEntertainmentCommentReplyResult!
#    deleteEntertainmentCommentReply(etmtId: ID!, cmmtId: ID!, rpyId: ID!): DeleteEntertainmentCommentReplyResult!
}

schema {
    query: Query
    mutation: Mutation
}

enum SortedBy {
    ActiveTimeAsc
    ActiveTimeDes
    HeatAsc
    HeatDes
    NatureAsc
    NatureDes
}